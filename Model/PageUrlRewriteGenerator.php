<?php
/*
 * @Author:    Nathan Chick (nathan.chick@deploy.co.uk)
 * @Copyright: 2024 Deploy Ecommerce (https://www.deploy.co.uk/)
 * @Package:   DeployEcommerce_BuilderIO
 */
declare(strict_types=1);

namespace DeployEcommerce\BuilderIO\Model;

use Magento\Store\Model\StoreManagerInterface;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory;

/**
 * Class CmsPageUrlRewriteGenerator
 *
 * This class is responsible for generating URL rewrites for CMS pages.
 *
 */
class PageUrlRewriteGenerator
{
    /**
     * Entity type code
     */
    const ENTITY_TYPE = 'builderio-page';

    /**
     * Page model
     *
     * @param UrlRewriteFactory $urlRewriteFactory
     * @param StoreManagerInterface $storeManager
     * @param ContentPageModel $page
     */
    public function __construct(
        private UrlRewriteFactory $urlRewriteFactory,
        private StoreManagerInterface $storeManager,
        private ContentPageModel $page
    ) {
    }

    /**
     * Generate URL rewrites for the given page
     *
     * @param ContentPageModel $page
     * @return UrlRewrite[]
     */
    public function generate(ContentPageModel $page)
    {
        $stores = explode(',', $page->getStoreIds());
        $this->page = $page;

        $urls = [];
        $existingStores = $this->storeManager->getStores();

        foreach ($stores as $storeId) {
            if (!isset($existingStores[$storeId])) {
                continue;
            }
            $urls[] = $this->createUrlRewrite($storeId);
        }

        return $urls;
    }

    /**
     * Create url rewrite object
     *
     * @param int $storeId
     * @param int $redirectType
     * @return UrlRewrite
     */
    private function createUrlRewrite($storeId, $redirectType = 0)
    {
        return $this->urlRewriteFactory->create()->setStoreId($storeId)
            ->setEntityType(self::ENTITY_TYPE)
            ->setEntityId($this->page->getId())
            ->setRequestPath($urlPath = ltrim($this->page->getUrl(), '/'))
            ->setTargetPath('builderio/view/page/id/' . $this->page->getId())
            ->setIsAutogenerated(1)
            ->setRedirectType($redirectType);
    }
}
